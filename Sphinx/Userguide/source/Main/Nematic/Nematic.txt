.. _NematicSection:
Passive nematics
=================

A nematic liquid crystal can be simulated via an MPCD algorithm by including an orientation field. 
This is done by assigning each MPCD particle an orientation :math:`\boldsymbol{u}_i`, which, when averaged over a cell, leads to a tensor order parameter :math:`\boldsymbol{Q}_c` for each cell [Shendruk2015]_.

.. math::

    \boldsymbol{Q}_c = \frac{1}{d-1}\left\langle d u_i u_i - \boldsymbol{I} \right\rangle_{N_c}


The scalar order parameter :math:`S_c` then corresponds to the largest eigenvalue of :math:`\boldsymbol{Q}`, while the director :math:`\vec{n}_c` is assigned to the corresponding eigenvector. 


Nematogen alignment
-------------------


Similarly to the :ref:`Andersen MPCD collision operator <Andersen>`, the time evolution of the particles' orientation is carried out through an orientation collision event [Shendruk2015]_.

.. math::

    \vec{u}_i(t+\delta t) = \Psi_c(U,\boldsymbol{Q}_{c}(t)),


in which :math:`U` denotes a globally specified interaction constant that represents the inter-molecular interactions, and as such, sets the energy scale that dictates the time evolution of the particles' orientation. 
More specifically, the algorithm assumes that the local equilibrium distribution for the orientation fields is well described by the Maier-Saupe self-consistent mean-field theory 

.. math::

    f_\text{ori} = g \exp(-\beta W_\text{MF}(U,S_c,u_n)),

in which :math:`u_n \equiv \vec{u}_i\cdot\vec{n}_c`, :math:`\beta=1/k_B T` and 

.. math::

    W_{\text{MF}} = -U S_c u_n^2 + \frac{U}{d}(S_c-1)

is the mean field interaction potential. 

Since the second term in this potential is independent of :math:`u_n`, the distribution is controlled by the competition between the thermal energy :math:`\beta^{-1}` and the interaction energy :math:`S_c U`. 
This competition is quantified by the scaled energy :math:`\beta U S_c`.  
When the scaled energy is small, the distribution is flat, and all values of :math:`n_c` are equally likely --- ie, isotropic. If, instead, the scaled energy is large, the distribution becomes sharply centered around :math:`\vec{n}_c`.

The nematic collision operator works by drawing random orientations from the equilibrium orientation distribution :math:`f_\mathrm{ori}`, leading to values centered around :math:`\vec{n}_c`. 
Due to this, for a high enough cell population, the changes in individual particle orientations, :math:`\delta\boldsymbol{u}_{\text{col},i} = \vec{u}_i(t+\delta t)-\vec{u}_i(t)`, do not alter the cell's director :math:`\vec{n}_c(t)`. 


Two-way couping between flow and orientation
--------------------------------------------

While the orientation collision operator deals with the alignment of the nematic MPCD particles, to correctly reproduce nematohydrodynamics it is equally important to incorporate the coupling between the particle's orientation and the fluid flow. 
This coupling comes in two ways: 

#. The fluid flow can rotate the particles' orientation 
#. The particles' motion can produce backflow.

To address this, the nematic MPCD algorithm treats nematogens as if they were rotating through their own flow, envisioning them as dilute rods in a viscous / non-inertial fluid [Shendruk2015]_. 
With this assumption, it follows that the nematic MPCD particles are subjected to three different sources of torque

.. math::

    \vec{\Gamma}_{\text{net},i} = \vec{\Gamma}_{\text{HI},i}+ \vec{\Gamma}_{\text{col},i}+\vec{\Gamma}_{\text{ext},i}.

These are:

1. :math:`\vec{\Gamma}_{\text{HI},i}`: Hydrodynamic torques due to the vorticity of the flow field and its shear rate.
2. :math:`\vec{\Gamma}_{\text{col},i} = \gamma_R\vec{u}_i\times \dot{\vec{u}}_{\text{col},i}`: The thermal torque caused by the orientational collision operator (where :math:`\dot{\vec{u}}_{\text{col},i} =\delta\vec{u}_{\text{col},i}/\delta t` denotes the thermally induced rotation rate).
3.  :math:`\vec{\Gamma}_{\text{ext},i}`, external torques, caused, for example, by electric fields, magnetic fields or :ref:`boundaries <chapterBC>`.

Because this algorithm assumes a viscous overdamped fluid, these torques must balance each other, resulting in a vanishing net torque:

.. math::

    \vec{\Gamma}_{\text{net},i} = 0.

Solving this equation for the rotation rate of an MPCD particle, :math:`\dot{\vec{u}}_i`, shows that :math:`\dot{\vec{u}}_i = \dot{\vec{u}}_{\text{HI},i}+\dot{\vec{u}}_{\text{col},i}`, in which
:math:`\dot{\vec{u}}_{\text{col},i}` is the thermally induced rotation rate and :math:`\dot{\vec{u}}_{\text{HI},i}` is the rotation rate induced by the vorticity and shear rate of the fluid. 
In the particular case of a thin rod, which is assumed by the algorithm, the latter is described by Jeffery's equation

.. math::

    \frac{\delta \vec{u}_{\text{HI},i}}{\delta t} = \chi_{\text{HI}} \left[\vec{u}_i\cdot\vec{w}+\lambda (\vec{u}_i\cdot \vec{D}-\vec{u}_i(\vec{u}_i\vec{u}_i:\vec{\omega}))\right],


in which :math:`\chi_{HI}` is an heuristic shear coupling coefficient that sets the alignment relaxation time, :math:`\lambda` is the bare tumbling parameter, while :math:`\vec{D}` and :math:`\vec{\omega}` represent the shear rate and vorticity tensors, respectively.

In turn, the nematic MPCD algorithm included the backflow induced by the nematogen in the fluid by modifiying the :ref:`Andersen velocity collision operator <Andersen>` to include balancing angular impulses, i.e., equal in magnitude but opposite in direction, to those caused by the hydrodynamic torques on each nematogen :math:`\vec{\Gamma}_{\text{HI},i} = -(\vec{\Gamma}_{\text{col},i}+\vec{\Gamma}_{\text{ext},i})`. 
To counter this impulse with the hydrodynamic drag, this is then transferred to the linear momentum portion of the algorithm, thus modifying the Andersen MPCD collision operator to:

.. math::
    :name: eq:NematicCollision

    \vec{\Xi}^N_{i,c} = \vec{\xi}_i - \langle \xi_j\rangle _{N_c} +\left(\vec{I}_c^{-1}\cdot\left[\delta \vec{L}_c-\sum_{i=1}^{N_c}\vec{\Gamma}_{\text{HI},i}\delta t\right]\right)\times \vec{r}_i'

Proceeding in this way ensures that the system's total angular momentum is conserved. Furthermore, as setting :math:`\gamma_R=0` kills the transfer or momentum for each particle, this also results in turning this coupling off. 

Isotropic-nematic transition
----------------------------

As mentioned above, increasing :math:`\beta U` changes the orientation distribution from flat to highly peaked. 
Operationally, this means that a system with a small :math:`\beta U` will exist in an isotropic fluid state with a global scalar order parameter :math:`S` close to zero. 
On the contrary, setting a large value of :math:`\beta U` will lead to a nematic order. 
Even though the algorithm assumes a near-equilibrium Maier-Saupe distribution for the orientation, it does so at the local cell level. 
This means that in general the scalar order parameter and the director are spatially varying variables, which allows the system to exist with local nematic order between the two regimes discussed above. 
In MPCD units, for a mean population of 20 particles per MPCD cell, in 2D :math:`U=5` sets the threshold for nematic order. By default, the code runs at :math:`U=10`.


Frank elastic coefficients
--------------------------

Spatial distortions of the nematic director $\vec{n}$ have an energetic cost. 
This cost is given by the following free energy density

.. math::

    f = \frac{1}{2}K_{\text{splay}}(\vec{\nabla}\cdot\vec{n})^2
    +\frac{1}{2}K_{\text{twist}}(\vec{n}\cdot\vec{\nabla}\times\vec{n})^2
    +\frac{1}{2}K_{\text{bend}}(\vec{n}\times(\vec{\nabla}\times\vec{n}))^2,

in which :math:`K_{\text{splay}}`, :math:`K_{\text{twist}}` and :math:`K_{\text{bend}}` are three coeffiecients quantifying the energetic cost of the three different possible distortions: splay, twist and bend respectively.  This coefficients are collectively known as Frank Elastic coefficients.

In the nematic-MPCD algorithm, :math:`\beta U` controls the interaction between nematogens. Thus, it is not surprising that it also sets the Frank coefficients. All three coefficients are of order :math:`\sim U/a`. Although in principle there are differences between the three coefficients, in the regime of small rods (compared to interaction lengths) under which nematic MPCD operates, these are negligible, and thus the algorithm presents isotropic elasticity.  


Tumbling & shear alignment
--------------------------

The bare tumbling parameter :math:`\lambda` in the Jeffery's equation only applies in the limit of a dilute suspension of nematogens. Away from that limit, Jeffery's equation can still be used but, because of nematogen-nematogen interactions) with a renormalized tumbling parameter [Archer1995]_

.. math::
    \lambda' = \left(\frac{15\,S+84\,S_4+42}{105\, S}\right) \lambda,

in which :math:`S_4` is the fourth moment of the Marie-Soupe distribution.
In the nematic MPCD algorithm, the input is the bare tumbling parameter :math:`\lambda`. As such, care must be paid in that what determines the behaviour of the nematogens is :math:`\lambda'`, not :math:`\lambda`. 
For :math:`\lambda'<1`, the nematogens tumble, i.e., continuously revolve. For :math:`|\lambda'|`>1$ the nematogens experience shear align to the flow. 

Magnetic fields
---------------

External magnetic fields cause torques on the nemtogens, making them want to align with the field. 
The free energy associated to this effect is given by

.. math::
    f_\text{mag} = -\frac{1}{2} \chi_M B^2 \sin^2(\varepsilon),

in where :math:`B` is the magnitude of the magnetic field, :math:`\varepsilon` is the angle between the nematogen's orientation and the magnetic field and :math:`\chi_M` is a magnetic susceptibility which sets the strength of this effect.

Active nematic MPCD
===================

Active nematics inject energy into the system at the particle level. In wet systems, as the ones considered so far, they do so while conserving momentum, behaving as force dipoles. The active nematic MPCD algorithm achieves this at the mesoscale level, i.e., at the level of MPCD cells, by adding an active term to the nematic velocity collision operator so it introduces a force dipole that co-aligns with the cell director :math:`\vec{n}_c` [Kozhukhov2022]_

.. math::
    \vec\Xi^A_{i,c} = \vec\Xi^N_{i,c} + \alpha_c\delta_t\left(\frac{\kappa_i}{m_i}-\left\langle\frac{\kappa_j}{m_j}\right\rangle_c\right)\vec{n}_c

The active contribution is then composed of two terms:

The first term, :math:`\alpha_c\delta_t\left(\frac{\kappa_i}{m_i}\right)\vec{n}`, corresponds to the active force driving a change in momentum over \delta t. EXplicitly, it provides individual impulses (per unit mass) to each particle.

The second term, :math:`-\alpha_c\delta_t\left\langle\frac{\kappa_j}{m_j}\right\rangle_c\vec{n}`, ensures the conservation of momentum inside the cell by removing any residual impulse.

In this regard, the philosophy behind this active term is similar to the one behind the usual passive Andersen collision operator. The difference comes through in that the impulses imparted to each particle are not random. Instead, they have a fixed strength, set by :math:`\alpha_c\delta t/m_i`, and are parallel or anti-parallel to the cell director :math:`\vec{n}_c`, thus directly coupling the orientational and translational degrees of freedom. 

What determines whether an impulse is parallel or antiparallel to :math:`\vec{n}_c` is :math:`\kappa_i = \pm 1`. These coefficients are computed at each time step for every particle in the following manner: 

i) The algorithm first computes the coordinates of the center of mass of each cell. 
ii) Combining this information with the cell director, it establishes the equation of the plane perpendicular to the director that passes through the cell's center of mass.  This plane divides the cell into two halves. 
iii) If a particle lies above this plane, it receives a forward impulse, that is, in the direction of the director (:math:`\kappa_i=+1`).  If, instead, the particle lies below this plane, it receives a backward impulse (anti-parallel to the director, :math:`\kappa_i=-1`).


Variation on the strength of activity
-------------------------------------

As explained above, :math:`\alpha_c` sets the strength of the active dipoles, and thus of the active stress. 
In the algorithm, particles individually carry an activity :math:`\alpha_i` --- The algorithm can interpret this into a dipole strength :math:`\alpha_c` in four different ways, encoded as four different collision operators:

1. Particle-carried activity --- 16
2. Cell-carried activity --- 17
3. Modulated cell-carried activity --- 20
4. Modulated particle-carried activity --- 21


.. warning::
    Note: You can use :math:`\alpha_i < 0` to simulate contractile nematics, but only in a very limited regime. 

Particle-carried activity
^^^^^^^^^^^^^^^^^^^^^^^^^

In this version of the collision operator, each particle is thought to carry its own activity. The cell activity :math:`\alpha_c`  is just the sum of the activities of all the particles inside the cell

.. math::

    \alpha^P_c = \sum_{i=1}^{N_c}\alpha_i

This implies that with this choice, the strength of the active impulses provided by the collision operator increases with the population of the cell. In general, this leads to large density fluctuations which reduce the operational regime of the algorithm and make it unsuitable to treat solutes such as colloids, swimmers and polymers.

This active collision operator has the tag collOp: 16.  


Cell-carried activity
^^^^^^^^^^^^^^^^^^^^^

An alternative formulation is to interpret activity as a property of the cell, rather than of the particles.
In this version of the collision opertor, we interpret cell activity strength as the mean activities for all particles inside the cell

.. math::

    \alpha^C_c = \frac{1}{N_c}\sum_{i=1}^{N_c}\alpha_i

making the cell activity strength largely independent of the cell's population. 
In the particular case in which all particles have the same activity (for a example, a simulation with a single species), this makes the cell activity strength the same among all cells.

This active collision operator has the tag  collOp: 17.  


Modulated particle-carried & cell-carried activity
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

In addition to the above choices of activity strength, the algorithm also offers the possibility to couple the cell activity strength to the cell population by supressing it at high densities. This leads to two more collision operators: Modulated particle carried activity and Modulated cell carried activity. 

The way in which this suprression takes place is through a modulation function, which takes the form of a sigmoid:

.. math::

    S_C = \frac{1}{2}\left(1-\tanh\left(\frac{N_c-\langle N_c\rangle (1+\sigma_P)}{\langle N_c\rangle \sigma_W}\right)\right),

in where :math:`\sigma_P` and :math:`\sigma_W` are parameters that set at around which density the modulation takes place and over which range of densities it takes place, respectively. With this, the activity considered by these collision operators is:

* For Modulated cell carried activity: :math:`\alpha^{\text{MC}}_c = S_C\alpha^C_c` (tag  collOp: 20).
* For Modulated particle carried activity: :math:`\alpha^{\text{MP}}_c = S_C\alpha^P_c` (tag  collOp: 21).




.. warning::
    The choice of active collision operator has big consequences on the degree of density fluctuations. For application in which this not desired, the recommended operator is Modulated cell carried activity (collOp: 20). This collision operator is well behaved with bare activities (tag act) of up to 0.3.





Inputs for nematic MPCD
=======================

Main input tags
---------------

To make an MPCD fluid a nematic, the input file must turn on the liquid crystal mode, which is done by setting the main input tag lc to 1 (default value is 0)

    +------+------+-----------------------------------------------+
    | lc   |  int | Liquid crystal mode: 1 (on), 0 (off, default) |
    +------+------+-----------------------------------------------+

In addition, because of the need to conserve angular momentum, the velocity collision operator must be set to the Andersen collision operator that preserves angular momentum. This is done by setting the main input tag rTech to 3 (for a passive nematic) or 16, 17, 20 or 21 for an active nematic.

    +--------+----+-----------------------------------------------------------+
    | collOp | int| Collision operator: 3 (passive); 16, 17, 20 or 21 (active)|
    +--------+----+-----------------------------------------------------------+

Other main input tags that modify the behaviour of the liquid crystal are:

    +------+----------------+-------------------------------------------------------------------------------+
    | mfpot| double         | Mean field potential (interaction energy) :math:`U` (default 10)              |
    +------+----------------+-------------------------------------------------------------------------------+
    |mag   | array (double) | Constant external magnetic field (source of external torque, default [0,0,0]) |
    +------+----------------+-------------------------------------------------------------------------------+


Species tags
------------

The following are species depenten tags (i.e., they must be set in the species environment in the json input file) that apply for all nematic liquid crystals (passive and active)

    +----------+--------+-----------------------------------------------------------------------------------------------------------------+
    |oDist     |int     | Initial orientation: 0 (random), 1 (:math:`x`-axis), 2 (:math:`y`-axis), 3 (:math:`z`-axis) [#]_                |
    +----------+--------+-----------------------------------------------------------------------------------------------------------------+
    |rfc       |double  | Nematogen rotational friction coefficient :math:`\gamma_R` (default 0.01)                                       |
    +----------+--------+-----------------------------------------------------------------------------------------------------------------+
    |tumble    |double  | Bare tumble parameter :math:`\lambda` (default 2)                                                               |
    +----------+--------+-----------------------------------------------------------------------------------------------------------------+
    |shearSusc |double  | Hydrodynamic shear susceptibility :math:`\chi_{\text{HI}}` (default 0.5)                                        |
    +----------+--------+-----------------------------------------------------------------------------------------------------------------+
    | len      | double | Effective rod lenght (only relevant for boundary conditions, see CITE  , default 0.0007)                        |
    +----------+--------+-----------------------------------------------------------------------------------------------------------------+
    |magnSusc  |double  | Magnetic Suceptibility :math:`\chi_M` (defaul 0.0001)                                                           |
    +----------+--------+-----------------------------------------------------------------------------------------------------------------+



Active nematic have additional parameters. 

    +----------+--------+----------------------------------------------------------------------------------------------------------------------+
    |act       | double | Activity of the species (default 0.05)                                                                               |
    +----------+--------+----------------------------------------------------------------------------------------------------------------------+
    |sigWidth  | double |For modulated active collision operators. Width of the modulating sigmoid :math:`\sigma_W` (default 1.0, cannot be 0) |
    +----------+--------+----------------------------------------------------------------------------------------------------------------------+
    |sigPos    |double  |For modulated active collision operators. Width of the modulating sigmoid :math:`\sigma_P` (default sigWidth )        |
    +----------+--------+----------------------------------------------------------------------------------------------------------------------+

To minimize density variations, the recommended active collision operator is the modulated average (collOp 20).


Outputs for nematic MPCD
========================

The nematic MPCD algorithm introduces as outputs

* :math:`Q` tensor field (tag: qTensOut)
* Director field and scalar order parameter field (tag: dirSOut)
* :math:`Q` tensor field in reciprocal space (tag: qkTensOut)
* Orientational energy field (tag: oriEnOut)

It is also possible to ask for statistical data

* Distribution of the director components (tag: histDirOut)
* Distribution of the scalar order parameter (tag: histSOut)
* Radial director autocorrelation function (tag: dirCorrOut)
* Radial scalar order parameter autocorrelation function (tag: orderCorrOut)

Finally, the algorithm also posses utilities to compute on the fly topological features of the liquid crystal

* Topological charge field (tag: topoFieldOut)
* :math:`2D` defects' positions and orientations (tag: defectsOut)
* Disclination tensor field (disclinOut)



.. [#] For more options see the section on :ref:`particle properties <orientation>`.
