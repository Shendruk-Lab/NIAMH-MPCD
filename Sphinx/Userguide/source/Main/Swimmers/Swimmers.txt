.. _Swimmers:

Swimmer
=============

The hydrodynamical interaction of model shaped-anisotropic bacilliform are simulated using Active Dumbbell Swimmers (ADS) [ADS]_.

To model the bacilliform body of swimming microbes, an ADS model is proposed composed of two monomers (head and middle) simulating the body, subject to an explicit propulsion force applied in the dimer's polar axis. The two monomers are connected by a spring. 
The surrounding MPCD fluid sees these monomers point-particles, but excluded volume with other swimmers/obstacles can be turned on (default) or off.

The ADS forcing scheme is implemented by giving the MPCD boxes containing the head and body particle half the propulsion force and then adding an opposite force at a distance from the middle. This distance sets the type of swimmer (puller or pusher.)


.. image:: Swimmers/1.jpg
   :scale: 70%

Run-and tumble is included in the model. Through the tumble step, the spring constant and spring length are reduced, so that rotational diffusion is substantially increased. This mimics the tumble part.

Swimemrs can also induce rotlet torques on the surrounding fluid. The rotlet torque is applied om the head of the swimmer and an equal-but-opposite rotlet is applied on the tail position

Swimmers are included in the code by adding the following input script into the input file

::

    "nSwim":            1,


Which sets the number of swimmers to 1. 

Input Guide
=============

::

    `typeSwim`      | int           | 2                  | Swimmer type. Default is a dumbell swimmer with excluded volume interactions

This sets type of swimmer. Default is dumbell swimmer with excluded volume (2). 
typeSwim=0 for a fixed swimmer. Important, is that the number of swimmers than needs to be 1. 
typeSwim=1 gives moving swimmers with no excluded volume interactions. 
typeswim=2 gives moving swimmers with excluded volume itneractions. 
typeswim=3 gives only one force on the head, in the direction of the head, producing a monopole force.
typeswim=4 Swimmers constrained to be near the y=0 (2D) or z=0 (3D) domain boundary.

::

    `fsSwim`        | double        | 20                 | Magnitude of swimmer propulsion force

Swimmer propulsion force. Sets propulsion speed of swimmers

::

    `dsSwim`        | double        | 1                  | Dipole strength

Distance from the middle (in multiples of head-middle length/spring seperation) where tail force is applied. (for a pusher DS>0; for a puller DS<0) 

::

    `kSwim`         | double        | 30                 | Spring constant
    `roSwim`        | double        | 4                  | Spring seperation

Spring constant and seperation. This sets the size of the swimmers. 

::

    `sigSwim`       | double        | 4                  | Diameter approx sigma

Size of excluded volume of the head/middle monomer part. Only works if excluded volume is activated.

::

    `qDistSwim`     | int           | 0                  | Initial distribution of swimmer positions
    `oDistSwim`     | int           | 0                  | Initial distribution of swimmer orientations

These set the initial distribution of swimmer position (0=randomly placed within control volume, 1 Read from file, 2, Centre of controle volume) and swimmer orientation (0=random orientation, 1=x-aligned, 2=y-aligned, 3=z-algined, 4= 45 degrees angle. 5=randomly in XY-plane, 6 =randomly in XZ-plane, 7=randomly in YZ-plane, 
8=Align all particles in the direction of origin towards positive right hand corner of any cartesian plane, 9=Align all particles in the direction of two oppositely charged defects.)

::

    `headMSwim`     | int           | 20                 | Mass of head monomer
    `midMSwim`      | int           | 20                 | Mass of middle monomer

Mass of swimmer. You want this to be around the density of the fluid. 

::

    `tsSwim`        | double        | 0                  | Magnitude of swimmer torque

Magnitude of torque to set the swimmers as rotlet dipole

::

    `hspIdSwim`     | int           | 1                  | Multiphase fluid particle type of the head monomer in the swimmer
    `mspIdSwim`     | int           | 1                  | Multiphase fluid particle type of the middle monomer in the swimmer

If multiphase enables, treat swimmer as this type. Currently, make sure both particles are same type.

::

    `sizeShrinkSwim`| double        | 0.1                | How much do LJ sigma ro shrink when tumbling
    `springShrinkSwim`| double        | 0.1                | How much the spring constant is shrunk when tumbling
    `runTSwim`      | double        | 0                  | Average run time in units of MPCD timesteps dt (iterations, not MPCD time units)
    `tumTSwim`      | double        | 0                  | Average tumble time in units of MPCD timesteps dt (iterations, not MPCD time units)
    `shrTSwim`      | double        | 2                  | Set time to shrink/ extend in units of MPCD timesteps dt (iterations, not MPCD time units)

Run and tumble parameters. In order to make particle run and tumble, set runTSwim and tumTSwim to non-zero values. 

::

    `magMomSwim`    | double        | 1                  | Magnetic moment/ strength

The strength of the magnetic moment on the swimmers (if magnetic field is applied.)

::

    `fixDistSwim`   | double        | 0                  | The fixed distance from the wall for `DUMBELL_NEARWALL` mode

Used for timeswim=4. 

.. rubric:: Reference

.. [ADS]     R. Nash et al., PRE 77, 026709 (2008).